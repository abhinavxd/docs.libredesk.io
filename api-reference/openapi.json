{
  "openapi": "3.0.0",
  "info": {
    "title": "Libredesk API",
    "description": "REST API for Libredesk - Open source, self-hosted customer support desk",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Local development server"
    }
  ],
  "paths": {
    "/api/v1/activity-logs": {
      "get": {
        "tags": [
          "Actvity logs"
        ],
        "summary": "Get Activity Logs",
        "operationId": "handleGetActivityLogs",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Activity logs retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityLogListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/agents": {
      "get": {
        "tags": [
          "Agents"
        ],
        "summary": "Get Agents",
        "operationId": "handleGetAgents",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Agents retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Agents"
        ],
        "summary": "Create Agent",
        "operationId": "handleCreateAgent",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Agent created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/agents/compact": {
      "get": {
        "tags": [
          "Agents"
        ],
        "summary": "Get Agents Compact",
        "operationId": "handleGetAgentsCompact",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Compact agents retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentCompactListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/agents/me": {
      "get": {
        "tags": [
          "Agents"
        ],
        "summary": "Get Current Agent",
        "operationId": "handleGetCurrentAgent",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Current agent details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Agents"
        ],
        "summary": "Update Current Agent",
        "operationId": "handleUpdateCurrentAgent",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Updated agent details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/agents/me/availability": {
      "put": {
        "tags": [
          "Agents"
        ],
        "summary": "Update Agent Availability",
        "operationId": "handleUpdateAgentAvailability",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Agent availability updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/agents/me/avatar": {
      "delete": {
        "tags": [
          "Agents"
        ],
        "summary": "Delete Current Agent Avatar",
        "operationId": "handleDeleteCurrentAgentAvatar",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Avatar deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/agents/me/teams": {
      "get": {
        "tags": [
          "Agents"
        ],
        "summary": "Get Current Agent Teams",
        "operationId": "handleGetCurrentAgentTeams",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Teams retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/agents/reset-password": {
      "post": {
        "tags": [
          "Agents"
        ],
        "summary": "Reset Password",
        "operationId": "handleResetPassword",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Password reset initiated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/agents/set-password": {
      "post": {
        "tags": [
          "Agents"
        ],
        "summary": "Set Password",
        "operationId": "handleSetPassword",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Password set successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/agents/{id}": {
      "delete": {
        "tags": [
          "Agents"
        ],
        "summary": "Delete Agent",
        "operationId": "handleDeleteAgent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Agent deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": [
          "Agents"
        ],
        "summary": "Get Agent",
        "operationId": "handleGetAgent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Agent retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Agents"
        ],
        "summary": "Update Agent",
        "operationId": "handleUpdateAgent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Agent updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/agents/{id}/api-key": {
      "delete": {
        "tags": [
          "Agents"
        ],
        "summary": "Revoke A P I Key",
        "operationId": "handleRevokeAPIKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "API key revoked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Agents"
        ],
        "summary": "Generate A P I Key",
        "operationId": "handleGenerateAPIKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "API key generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/ai/completion": {
      "post": {
        "tags": [
          "AI completions"
        ],
        "summary": "A I Completion",
        "operationId": "handleAICompletion",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "AI completion generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AICompletionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/ai/prompts": {
      "get": {
        "tags": [
          "AI completions"
        ],
        "summary": "Get A I Prompts",
        "operationId": "handleGetAIPrompts",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "AI prompts retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIPromptListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/ai/provider": {
      "put": {
        "tags": [
          "AI completions"
        ],
        "summary": "Update A I Provider",
        "operationId": "handleUpdateAIProvider",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "AI provider updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login",
        "operationId": "handleLogin",
        "requestBody": {
          "description": "Login credentials",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid credentials)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/automations/rules": {
      "get": {
        "tags": [
          "Automations"
        ],
        "summary": "Get Automation Rules",
        "operationId": "handleGetAutomationRules",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Rules retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationRuleListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Automations"
        ],
        "summary": "Create Automation Rule",
        "operationId": "handleCreateAutomationRule",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Rule created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationRuleResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/automations/rules/execution-mode": {
      "put": {
        "tags": [
          "Automations"
        ],
        "summary": "Update Automation Rule Execution Mode",
        "operationId": "handleUpdateAutomationRuleExecutionMode",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Execution mode updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/automations/rules/weights": {
      "put": {
        "tags": [
          "Automations"
        ],
        "summary": "Update Automation Rule Weights",
        "operationId": "handleUpdateAutomationRuleWeights",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Weights updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/automations/rules/{id}": {
      "delete": {
        "tags": [
          "Automations"
        ],
        "summary": "Delete Automation Rule",
        "operationId": "handleDeleteAutomationRule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Rule deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": [
          "Automations"
        ],
        "summary": "Get Automation Rule",
        "operationId": "handleGetAutomationRule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Rule retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationRuleResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Automations"
        ],
        "summary": "Update Automation Rule",
        "operationId": "handleUpdateAutomationRule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Rule updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationRuleResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/automations/rules/{id}/toggle": {
      "put": {
        "tags": [
          "Automations"
        ],
        "summary": "Toggle Automation Rule",
        "operationId": "handleToggleAutomationRule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Rule toggled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationRuleResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/business-hours": {
      "get": {
        "tags": [
          "Business hours"
        ],
        "summary": "Get Business Hours",
        "operationId": "handleGetBusinessHours",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Business hours retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessHourListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Business hours"
        ],
        "summary": "Create Business Hours",
        "operationId": "handleCreateBusinessHours",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Business hours created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessHourResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/business-hours/{id}": {
      "delete": {
        "tags": [
          "Business hours"
        ],
        "summary": "Delete Business Hour",
        "operationId": "handleDeleteBusinessHour",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Business hour deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": [
          "Business hours"
        ],
        "summary": "Get Business Hour",
        "operationId": "handleGetBusinessHour",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Business hour retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessHourResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Business hours"
        ],
        "summary": "Update Business Hours",
        "operationId": "handleUpdateBusinessHours",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Business hours updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessHourResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/contacts": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get Contacts",
        "operationId": "handleGetContacts",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of contacts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/contacts/search": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Search Contacts",
        "operationId": "handleSearchContacts",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Contacts searched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactSearchResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/contacts/{id}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get Contact",
        "operationId": "handleGetContact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Contact details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Contacts"
        ],
        "summary": "Update Contact",
        "operationId": "handleUpdateContact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Contact updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/contacts/{id}/block": {
      "put": {
        "tags": [
          "Contacts"
        ],
        "summary": "Block Contact",
        "operationId": "handleBlockContact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Contact blocked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/contacts/{id}/notes": {
      "get": {
        "tags": [
          "Contact notes"
        ],
        "summary": "Get Contact Notes",
        "operationId": "handleGetContactNotes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Contact notes retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactNoteListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Contact notes"
        ],
        "summary": "Create Contact Note",
        "operationId": "handleCreateContactNote",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Contact note created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactNoteResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/contacts/{id}/notes/{note_id}": {
      "delete": {
        "tags": [
          "Contact notes"
        ],
        "summary": "Delete Contact Note",
        "operationId": "handleDeleteContactNote",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "note_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Contact note deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/conversations": {
      "post": {
        "tags": [
          "Conversations"
        ],
        "summary": "Create Conversation",
        "operationId": "handleCreateConversation",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Conversation created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/conversations/all": {
      "get": {
        "tags": [
          "Conversations"
        ],
        "summary": "Get all Conversations",
        "operationId": "handleGetAllConversations",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50
            },
            "description": "Items per page"
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "All conversations retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/conversations/assigned": {
      "get": {
        "tags": [
          "Conversations"
        ],
        "summary": "Get Assigned Conversations",
        "operationId": "handleGetAssignedConversations",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50
            },
            "description": "Items per page"
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Assigned conversations retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/conversations/search": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Search Conversations",
        "operationId": "handleSearchConversations",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Conversations searched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationSearchResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/conversations/unassigned": {
      "get": {
        "tags": [
          "Conversations"
        ],
        "summary": "Get Unassigned Conversations",
        "operationId": "handleGetUnassignedConversations",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50
            },
            "description": "Items per page"
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Unassigned conversations retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/conversations/{cuuid}/messages": {
      "post": {
        "tags": [
          "Conversations"
        ],
        "summary": "Send Message",
        "operationId": "handleSendMessage",
        "parameters": [
          {
            "name": "cuuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Message sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/conversations/{cuuid}/messages/{uuid}": {
      "get": {
        "tags": [
          "Conversations"
        ],
        "summary": "Get Message",
        "operationId": "handleGetMessage",
        "parameters": [
          {
            "name": "cuuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Conversation UUID"
          },
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Message UUID"
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Message sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/conversations/{cuuid}/messages/{uuid}/retry": {
      "put": {
        "tags": [
          "Conversations"
        ],
        "summary": "Retry Message",
        "operationId": "handleRetryMessage",
        "parameters": [
          {
            "name": "cuuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Message retried successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/conversations/{uuid}": {
      "get": {
        "tags": [
          "Conversations"
        ],
        "summary": "Get Conversation",
        "operationId": "handleGetConversation",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Conversation UUID"
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Conversation retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/conversations/{uuid}/assignee/team": {
      "put": {
        "tags": [
          "Conversations"
        ],
        "summary": "Update Team Assignee",
        "operationId": "handleUpdateTeamAssignee",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Team assignee updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/conversations/{uuid}/assignee/team/remove": {
      "put": {
        "tags": [
          "Conversations"
        ],
        "summary": "Remove Team Assignee",
        "operationId": "handleRemoveTeamAssignee",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Team assignee removed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/conversations/{uuid}/assignee/user": {
      "put": {
        "tags": [
          "Conversations"
        ],
        "summary": "Update User Assignee",
        "operationId": "handleUpdateUserAssignee",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "User assignee updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/conversations/{uuid}/assignee/user/remove": {
      "put": {
        "tags": [
          "Conversations"
        ],
        "summary": "Remove User Assignee",
        "operationId": "handleRemoveUserAssignee",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "User assignee removed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/conversations/{uuid}/contacts/custom-attributes": {
      "put": {
        "tags": [
          "Conversations"
        ],
        "summary": "Update Contact Custom Attributes",
        "operationId": "handleUpdateContactCustomAttributes",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Contact custom attributes updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/conversations/{uuid}/custom-attributes": {
      "put": {
        "tags": [
          "Conversations"
        ],
        "summary": "Update Conversation Custom Attributes",
        "operationId": "handleUpdateConversationCustomAttributes",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Conversation custom attributes updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/conversations/{uuid}/last-seen": {
      "put": {
        "tags": [
          "Conversations"
        ],
        "summary": "Update Conversation Assignee Last Seen",
        "operationId": "handleUpdateConversationAssigneeLastSeen",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Conversation assignee last seen updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/conversations/{uuid}/macros/{id}/apply": {
      "post": {
        "tags": [
          "Macros"
        ],
        "summary": "Apply Macro",
        "operationId": "handleApplyMacro",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Macro applied successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/conversations/{uuid}/messages": {
      "get": {
        "tags": [
          "Conversations"
        ],
        "summary": "Get Messages",
        "operationId": "handleGetMessages",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Conversation UUID"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 30
            },
            "description": "Items per page"
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Messages retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/conversations/{uuid}/participants": {
      "get": {
        "tags": [
          "Conversations"
        ],
        "summary": "Get Conversation Participants",
        "operationId": "handleGetConversationParticipants",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Conversation participants retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/conversations/{uuid}/priority": {
      "put": {
        "tags": [
          "Conversations"
        ],
        "summary": "Update Conversation Priority",
        "operationId": "handleUpdateConversationPriority",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Conversation priority updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/conversations/{uuid}/status": {
      "put": {
        "tags": [
          "Conversations"
        ],
        "summary": "Update Conversation Status",
        "operationId": "handleUpdateConversationStatus",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Conversation status updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/conversations/{uuid}/tags": {
      "post": {
        "tags": [
          "Conversations"
        ],
        "summary": "Update Conversationtags",
        "operationId": "handleUpdateConversationtags",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Conversation tags updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/custom-attributes": {
      "get": {
        "tags": [
          "Custom attributes"
        ],
        "summary": "Get Custom Attributes",
        "operationId": "handleGetCustomAttributes",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Custom attributes retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomAttributeListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Custom attributes"
        ],
        "summary": "Create Custom Attribute",
        "operationId": "handleCreateCustomAttribute",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Custom attribute created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomAttributeResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/custom-attributes/{id}": {
      "delete": {
        "tags": [
          "Custom attributes"
        ],
        "summary": "Delete Custom Attribute",
        "operationId": "handleDeleteCustomAttribute",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Custom attribute deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": [
          "Custom attributes"
        ],
        "summary": "Get Custom Attribute",
        "operationId": "handleGetCustomAttribute",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Custom attribute retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomAttributeResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Custom attributes"
        ],
        "summary": "Update Custom Attribute",
        "operationId": "handleUpdateCustomAttribute",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Custom attribute updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomAttributeResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/inboxes": {
      "get": {
        "tags": [
          "Inboxes"
        ],
        "summary": "Get Inboxes",
        "operationId": "handleGetInboxes",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Inboxes retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InboxListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Inboxes"
        ],
        "summary": "Create Inbox",
        "operationId": "handleCreateInbox",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Inbox created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InboxResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/inboxes/{id}": {
      "delete": {
        "tags": [
          "Inboxes"
        ],
        "summary": "Delete Inbox",
        "operationId": "handleDeleteInbox",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Inbox deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": [
          "Inboxes"
        ],
        "summary": "Get Inbox",
        "operationId": "handleGetInbox",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Inbox retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InboxResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Inboxes"
        ],
        "summary": "Update Inbox",
        "operationId": "handleUpdateInbox",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Inbox updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InboxResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/inboxes/{id}/toggle": {
      "put": {
        "tags": [
          "Inboxes"
        ],
        "summary": "Toggle Inbox",
        "operationId": "handleToggleInbox",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Inbox toggled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InboxResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/lang/{lang}": {
      "get": {
        "tags": [
          "i18n"
        ],
        "summary": "Get i18n Lang",
        "operationId": "handleGetI18nLang",
        "parameters": [
          {
            "name": "lang",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Language data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/macros": {
      "get": {
        "tags": [
          "Macros"
        ],
        "summary": "Get Macros",
        "operationId": "handleGetMacros",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Macros retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MacroListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Macros"
        ],
        "summary": "Create Macro",
        "operationId": "handleCreateMacro",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Macro created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MacroResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/macros/{id}": {
      "delete": {
        "tags": [
          "Macros"
        ],
        "summary": "Delete Macro",
        "operationId": "handleDeleteMacro",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Macro deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": [
          "Macros"
        ],
        "summary": "Get Macro",
        "operationId": "handleGetMacro",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Macro retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MacroResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Macros"
        ],
        "summary": "Update Macro",
        "operationId": "handleUpdateMacro",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Macro updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MacroResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/media": {
      "post": {
        "tags": [
          "Media"
        ],
        "summary": "Media Upload",
        "operationId": "handleMediaUpload",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful media upload response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/messages/search": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Search Messages",
        "operationId": "handleSearchMessages",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Messages searched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageSearchResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/oidc": {
      "get": {
        "tags": [
          "OpenID connect single sign-on"
        ],
        "summary": "Get all O I D C",
        "operationId": "handleGetAllOIDC",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of all OIDC providers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OIDCListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "OpenID connect single sign-on"
        ],
        "summary": "Create O I D C",
        "operationId": "handleCreateOIDC",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Created OIDC provider response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OIDCResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/oidc/enabled": {
      "get": {
        "tags": [
          "OpenID connect single sign-on"
        ],
        "summary": "Get all Enabled O I D C",
        "operationId": "handleGetAllEnabledOIDC",
        "responses": {
          "200": {
            "description": "List of enabled OIDC providers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OIDCListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/oidc/{id}": {
      "delete": {
        "tags": [
          "OpenID connect single sign-on"
        ],
        "summary": "Delete O I D C",
        "operationId": "handleDeleteOIDC",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "OIDC provider deletion success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": [
          "OpenID connect single sign-on"
        ],
        "summary": "Get O I D C",
        "operationId": "handleGetOIDC",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Single OIDC provider response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OIDCResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "OpenID connect single sign-on"
        ],
        "summary": "Update O I D C",
        "operationId": "handleUpdateOIDC",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Updated OIDC provider response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OIDCResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/oidc/{id}/finish": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "O I D C Callback",
        "operationId": "handleOIDCCallback",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OIDC callback processed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/oidc/{id}/login": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "O I D C Login",
        "operationId": "handleOIDCLogin",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OIDC login initiated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/priorities": {
      "get": {
        "tags": [
          "Status and priority"
        ],
        "summary": "Get Priorities",
        "operationId": "handleGetPriorities",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Priorities retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriorityListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/reports/overview/charts": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Overview Charts",
        "operationId": "handleOverviewCharts",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Charts overview report retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/reports/overview/counts": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Overview Counts",
        "operationId": "handleOverviewCounts",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Counts overview report retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/reports/overview/sla": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Overview S L A",
        "operationId": "handleOverviewSLA",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "SLA overview report retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get Roles",
        "operationId": "handleGetRoles",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Roles retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Roles"
        ],
        "summary": "Create Role",
        "operationId": "handleCreateRole",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Role created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/roles/{id}": {
      "delete": {
        "tags": [
          "Roles"
        ],
        "summary": "Delete Role",
        "operationId": "handleDeleteRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Role deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get Role",
        "operationId": "handleGetRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Role retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Roles"
        ],
        "summary": "Update Role",
        "operationId": "handleUpdateRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Role updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/settings/general": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Get General Settings",
        "operationId": "handleGetGeneralSettings",
        "responses": {
          "200": {
            "description": "General settings response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralSettingsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Settings"
        ],
        "summary": "Update General Settings",
        "operationId": "handleUpdateGeneralSettings",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Settings update success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/settings/notifications/email": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Get Email Notification Settings",
        "operationId": "handleGetEmailNotificationSettings",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Email notification settings response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailNotificationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Settings"
        ],
        "summary": "Update Email Notification Settings",
        "operationId": "handleUpdateEmailNotificationSettings",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Email settings update success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/sla": {
      "get": {
        "tags": [
          "SLAs"
        ],
        "summary": "Get S L As",
        "operationId": "handleGetSLAs",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "SLAs retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SLAListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "SLAs"
        ],
        "summary": "Create S L A",
        "operationId": "handleCreateSLA",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "SLA created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SLAResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/sla/{id}": {
      "delete": {
        "tags": [
          "SLAs"
        ],
        "summary": "Delete S L A",
        "operationId": "handleDeleteSLA",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "SLA deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": [
          "SLAs"
        ],
        "summary": "Get S L A",
        "operationId": "handleGetSLA",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "SLA retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SLAResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "SLAs"
        ],
        "summary": "Update S L A",
        "operationId": "handleUpdateSLA",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "SLA updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SLAResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/statuses": {
      "get": {
        "tags": [
          "Status and priority"
        ],
        "summary": "Get Statuses",
        "operationId": "handleGetStatuses",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Statuses retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Status and priority"
        ],
        "summary": "Create Status",
        "operationId": "handleCreateStatus",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Status created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/statuses/{id}": {
      "delete": {
        "tags": [
          "Status and priority"
        ],
        "summary": "Delete Status",
        "operationId": "handleDeleteStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Status deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Status and priority"
        ],
        "summary": "Update Status",
        "operationId": "handleUpdateStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Status updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/tags": {
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "Get Tags",
        "operationId": "handleGetTags",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Tags retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Tags"
        ],
        "summary": "Create Tag",
        "operationId": "handleCreateTag",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Tag created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/tags/{id}": {
      "delete": {
        "tags": [
          "Tags"
        ],
        "summary": "Delete Tag",
        "operationId": "handleDeleteTag",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Tag deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Tags"
        ],
        "summary": "Update Tag",
        "operationId": "handleUpdateTag",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Tag updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/teams": {
      "get": {
        "tags": [
          "Teams"
        ],
        "summary": "Get Teams",
        "operationId": "handleGetTeams",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of teams",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Teams"
        ],
        "summary": "Create Team",
        "operationId": "handleCreateTeam",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Created team",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/teams/compact": {
      "get": {
        "tags": [
          "Teams"
        ],
        "summary": "Get Teams Compact",
        "operationId": "handleGetTeamsCompact",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Compact list of teams",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/teams/{id}": {
      "delete": {
        "tags": [
          "Teams"
        ],
        "summary": "Delete Team",
        "operationId": "handleDeleteTeam",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Team deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": [
          "Teams"
        ],
        "summary": "Get Team",
        "operationId": "handleGetTeam",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Team retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Teams"
        ],
        "summary": "Update Team",
        "operationId": "handleUpdateTeam",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Team updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/teams/{id}/conversations/unassigned": {
      "get": {
        "tags": [
          "Conversations"
        ],
        "summary": "Get Team Unassigned Conversations",
        "operationId": "handleGetTeamUnassignedConversations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of unassigned conversations for team",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/templates": {
      "get": {
        "tags": [
          "Templates"
        ],
        "summary": "Get Templates",
        "operationId": "handleGetTemplates",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Templates retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Templates"
        ],
        "summary": "Create Template",
        "operationId": "handleCreateTemplate",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Template created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/templates/{id}": {
      "delete": {
        "tags": [
          "Templates"
        ],
        "summary": "Delete Template",
        "operationId": "handleDeleteTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Template deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": [
          "Templates"
        ],
        "summary": "Get Template",
        "operationId": "handleGetTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Template retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Templates"
        ],
        "summary": "Update Template",
        "operationId": "handleUpdateTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Template updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/views/me": {
      "get": {
        "tags": [
          "Views"
        ],
        "summary": "Get User Views",
        "operationId": "handleGetUserViews",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "User views retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ViewListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Views"
        ],
        "summary": "Create User View",
        "operationId": "handleCreateUserView",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "User view created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ViewResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/views/me/{id}": {
      "delete": {
        "tags": [
          "Views"
        ],
        "summary": "Delete User View",
        "operationId": "handleDeleteUserView",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "User view deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Views"
        ],
        "summary": "Update User View",
        "operationId": "handleUpdateUserView",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "User view updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ViewResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/views/{id}/conversations": {
      "get": {
        "tags": [
          "Conversations"
        ],
        "summary": "Get View Conversations",
        "operationId": "handleGetViewConversations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "View conversations retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/webhooks": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Get Webhooks",
        "operationId": "handleGetWebhooks",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Webhooks retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Create Webhook",
        "operationId": "handleCreateWebhook",
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/webhooks/{id}": {
      "delete": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Delete Webhook",
        "operationId": "handleDeleteWebhook",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Get Webhook",
        "operationId": "handleGetWebhook",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Update Webhook",
        "operationId": "handleUpdateWebhook",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/webhooks/{id}/test": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Test Webhook",
        "operationId": "handleTestWebhook",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook test initiated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/webhooks/{id}/toggle": {
      "put": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Toggle Webhook",
        "operationId": "handleToggleWebhook",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basicAuth": []
          },
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook toggled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/assets/{all:*}": {
      "get": {
        "tags": [
          "FIXME: Don't need three separate routes for the same thing"
        ],
        "summary": "serve Frontend Static Files",
        "operationId": "serveFrontendStaticFiles",
        "parameters": [
          {
            "name": "all:*",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Static file served successfully",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "Health check"
        ],
        "summary": "Health Check",
        "operationId": "handleHealthCheck",
        "responses": {
          "200": {
            "description": "Health check passed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "apiKey": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      },
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    },
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "Additional error data"
          },
          "error": {
            "type": "string",
            "description": "Error message",
            "example": "Invalid email or password"
          }
        },
        "description": "Error response format"
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User email address",
            "example": "user@example.com",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User password",
            "example": "securepassword123"
          }
        },
        "required": [
          "email",
          "password"
        ],
        "example": {
          "email": "user@example.com",
          "password": "securepassword123"
        },
        "description": "Login request payload"
      },
      "User": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User email address",
            "example": "user@example.com",
            "format": "email"
          },
          "enabled": {
            "type": "boolean",
            "description": "Whether the user account is enabled",
            "example": true
          },
          "first_name": {
            "type": "string",
            "description": "User first name",
            "example": "John"
          },
          "id": {
            "type": "integer",
            "description": "User ID",
            "example": 1
          },
          "last_name": {
            "type": "string",
            "description": "User last name",
            "example": "Doe"
          }
        },
        "description": "User object returned on successful login"
      },
      "Contact": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "type": {
            "type": "string"
          },
          "availability_status": {
            "type": "string"
          },
          "avatar_url": {
            "type": "string",
            "nullable": true
          },
          "phone_number": {
            "type": "string",
            "nullable": true
          },
          "phone_number_calling_code": {
            "type": "string",
            "nullable": true
          },
          "custom_attributes": {
            "type": "object"
          },
          "enabled": {
            "type": "boolean"
          },
          "last_active_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "last_login_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "ContactSummary": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "avatar_url": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ContactResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "data": {
            "$ref": "#/components/schemas/Contact"
          }
        }
      },
      "ContactListResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          }
        }
      },
      "Message": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "uuid": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": ["incoming", "outgoing"]
          },
          "status": {
            "type": "string",
            "enum": ["pending", "sent", "received", "failed"]
          },
          "conversation_id": {
            "type": "integer"
          },
          "conversation_uuid": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "text_content": {
            "type": "string"
          },
          "content_type": {
            "type": "string",
            "enum": ["html", "text"]
          },
          "private": {
            "type": "boolean"
          },
          "sender_id": {
            "type": "integer"
          },
          "sender_type": {
            "type": "string",
            "enum": ["agent", "contact"]
          },
          "meta": {
            "type": "object",
            "properties": {
              "to": {
                "type": "array",
                "items": {"type": "string"}
              },
              "cc": {
                "type": "array",
                "items": {"type": "string"}
              },
              "bcc": {
                "type": "array",
                "items": {"type": "string"}
              },
              "from": {
                "type": "array",
                "items": {"type": "string"}
              },
              "subject": {
                "type": "string"
              }
            }
          },
          "attachments": {
            "type": "array",
            "items": {"type": "object"}
          }
        }
      },
      "Conversation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "uuid": {
            "type": "string"
          },
          "contact_id": {
            "type": "integer"
          },
          "inbox_id": {
            "type": "integer"
          },
          "closed_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "resolved_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "reference_number": {
            "type": "string"
          },
          "priority": {
            "type": "string",
            "nullable": true
          },
          "priority_id": {
            "type": "integer",
            "nullable": true
          },
          "status": {
            "type": "string"
          },
          "status_id": {
            "type": "integer"
          },
          "first_reply_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "last_reply_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "assigned_user_id": {
            "type": "integer",
            "nullable": true
          },
          "assigned_team_id": {
            "type": "integer",
            "nullable": true
          },
          "assignee_last_seen_at": {
            "type": "string",
            "format": "date-time"
          },
          "waiting_since": {
            "type": "string",
            "format": "date-time"
          },
          "subject": {
            "type": "string"
          },
          "inbox_mail": {
            "type": "string"
          },
          "inbox_name": {
            "type": "string"
          },
          "inbox_channel": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {"type": "string"}
          },
          "meta": {
            "type": "array",
            "items": {"type": "object"}
          },
          "custom_attributes": {
            "type": "object"
          },
          "last_message_at": {
            "type": "string",
            "format": "date-time"
          },
          "last_message": {
            "type": "string"
          },
          "last_message_sender": {
            "type": "string"
          },
          "contact": {
            "$ref": "#/components/schemas/Contact"
          },
          "sla_policy_id": {
            "type": "integer",
            "nullable": true
          },
          "sla_policy_name": {
            "type": "string",
            "nullable": true
          },
          "applied_sla_id": {
            "type": "integer",
            "nullable": true
          },
          "first_response_deadline_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "resolution_deadline_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "next_response_deadline_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "next_response_met_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "previous_conversations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {"type": "integer"},
                "created_at": {"type": "string", "format": "date-time"},
                "updated_at": {"type": "string", "format": "date-time"},
                "uuid": {"type": "string"},
                "contact": {"$ref": "#/components/schemas/ContactSummary"},
                "last_message": {"type": "string"},
                "last_message_at": {"type": "string", "format": "date-time"}
              }
            }
          }
        }
      },
      "ConversationListItem": {
        "type": "object",
        "properties": {
          "id": {"type": "integer"},
          "created_at": {"type": "string", "format": "date-time"},
          "updated_at": {"type": "string", "format": "date-time"},
          "uuid": {"type": "string"},
          "waiting_since": {"type": "string", "format": "date-time"},
          "assignee_last_seen_at": {"type": "string", "format": "date-time"},
          "contact": {"$ref": "#/components/schemas/ContactSummary"},
          "inbox_channel": {"type": "string"},
          "inbox_name": {"type": "string"},
          "sla_policy_id": {"type": "integer", "nullable": true},
          "first_reply_at": {"type": "string", "format": "date-time", "nullable": true},
          "last_reply_at": {"type": "string", "format": "date-time", "nullable": true},
          "resolved_at": {"type": "string", "format": "date-time", "nullable": true},
          "subject": {"type": "string"},
          "last_message": {"type": "string"},
          "last_message_at": {"type": "string", "format": "date-time"},
          "last_message_sender": {"type": "string"},
          "next_sla_deadline_at": {"type": "string", "format": "date-time", "nullable": true},
          "priority_id": {"type": "integer", "nullable": true},
          "unread_message_count": {"type": "integer"},
          "status": {"type": "string"},
          "priority": {"type": "string", "nullable": true},
          "first_response_deadline_at": {"type": "string", "format": "date-time", "nullable": true},
          "resolution_deadline_at": {"type": "string", "format": "date-time", "nullable": true},
          "applied_sla_id": {"type": "integer", "nullable": true},
          "next_response_deadline_at": {"type": "string", "format": "date-time", "nullable": true},
          "next_response_met_at": {"type": "string", "format": "date-time", "nullable": true}
        }
      },
      "ConversationListResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {
            "type": "object",
            "properties": {
              "results": {
                "type": "array",
                "items": {"$ref": "#/components/schemas/ConversationListItem"}
              },
              "total": {"type": "integer"},
              "per_page": {"type": "integer"},
              "total_pages": {"type": "integer"},
              "page": {"type": "integer"}
            }
          }
        }
      },
      "ConversationResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {"$ref": "#/components/schemas/Conversation"}
        }
      },
      "MessageListResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {
            "type": "object",
            "properties": {
              "results": {
                "type": "array",
                "items": {"$ref": "#/components/schemas/Message"}
              },
              "total": {"type": "integer"},
              "per_page": {"type": "integer"},
              "total_pages": {"type": "integer"},
              "page": {"type": "integer"}
            }
          }
        }
      },
      "MessageResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {"$ref": "#/components/schemas/Message"}
        }
      },
      "Media": {
        "type": "object",
        "properties": {
          "id": {"type": "integer", "example": 123},
          "created_at": {"type": "string", "format": "date-time", "example": "2025-08-28T10:00:00Z"},
          "updated_at": {"type": "string", "format": "date-time", "example": "2025-08-28T10:00:00Z"},
          "uuid": {"type": "string", "example": "550e8400-e29b-41d4-a716-446655440000"},
          "store": {"type": "string", "example": "fs"},
          "filename": {"type": "string", "example": "example.jpg"},
          "content_type": {"type": "string", "example": "image/jpeg"},
          "content_id": {"type": "string", "example": ""},
          "model_id": {"type": "integer", "nullable": true, "example": 456},
          "model_type": {"type": "string", "nullable": true, "example": "messages"},
          "disposition": {"type": "string", "nullable": true, "example": "attachment"},
          "size": {"type": "integer", "example": 102400},
          "meta": {"type": "object", "example": {"width": 800, "height": 600}},
          "url": {"type": "string", "example": "/uploads/550e8400-e29b-41d4-a716-446655440000"}
        }
      },
      "MediaResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {"$ref": "#/components/schemas/Media"}
        }
      },
      "GeneralSettings": {
        "type": "object",
        "properties": {
          "app.site_name": {"type": "string", "example": "LibreDesk"},
          "app.lang": {"type": "string", "example": "en"},
          "app.max_file_upload_size": {"type": "integer", "example": 10},
          "app.favicon_url": {"type": "string", "example": "/images/favicon.ico"},
          "app.logo_url": {"type": "string", "example": "/images/logo.png"},
          "app.root_url": {"type": "string", "example": "http://localhost:8080"},
          "app.allowed_file_upload_extensions": {"type": "array", "items": {"type": "string"}, "example": ["jpg", "png", "pdf"]},
          "app.timezone": {"type": "string", "example": "UTC"},
          "app.business_hours_id": {"type": "string", "example": "1"},
          "app.update": {"type": "object", "example": null},
          "app.version": {"type": "string", "example": "1.0.0"}
        }
      },
      "GeneralSettingsResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {"$ref": "#/components/schemas/GeneralSettings"}
        }
      },
      "EmailNotification": {
        "type": "object",
        "properties": {
          "notification.email.username": {"type": "string", "example": "noreply@example.com"},
          "notification.email.host": {"type": "string", "example": "smtp.example.com"},
          "notification.email.port": {"type": "integer", "example": 587},
          "notification.email.password": {"type": "string", "example": "**********"},
          "notification.email.max_conns": {"type": "integer", "example": 10},
          "notification.email.idle_timeout": {"type": "string", "example": "15s"},
          "notification.email.wait_timeout": {"type": "string", "example": "5s"},
          "notification.email.auth_protocol": {"type": "string", "example": "PLAIN"},
          "notification.email.email_address": {"type": "string", "example": "noreply@example.com"},
          "notification.email.max_msg_retries": {"type": "integer", "example": 3},
          "notification.email.tls_type": {"type": "string", "example": "STARTTLS"},
          "notification.email.tls_skip_verify": {"type": "boolean", "example": false},
          "notification.email.hello_hostname": {"type": "string", "example": "example.com"},
          "notification.email.enabled": {"type": "boolean", "example": true}
        }
      },
      "EmailNotificationResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {"$ref": "#/components/schemas/EmailNotification"}
        }
      },
      "OIDC": {
        "type": "object",
        "properties": {
          "id": {"type": "integer", "example": 1},
          "created_at": {"type": "string", "format": "date-time", "example": "2025-08-28T10:00:00Z"},
          "updated_at": {"type": "string", "format": "date-time", "example": "2025-08-28T10:00:00Z"},
          "name": {"type": "string", "example": "Google SSO"},
          "enabled": {"type": "boolean", "example": true},
          "client_id": {"type": "string", "example": "example-client-id"},
          "client_secret": {"type": "string", "example": "**********"},
          "provider": {"type": "string", "example": "Google"},
          "provider_url": {"type": "string", "example": "https://accounts.google.com"},
          "redirect_uri": {"type": "string", "example": "http://localhost:8080/api/v1/oidc/1/finish"},
          "logo_url": {"type": "string", "example": "/images/google-logo.png"}
        }
      },
      "OIDCResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {"$ref": "#/components/schemas/OIDC"}
        }
      },
      "OIDCListResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/OIDC"}
          }
        }
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {"type": "boolean", "example": true}
        }
      },
      "ConversationSearchResult": {
        "type": "object",
        "properties": {
          "created_at": {"type": "string", "format": "date-time", "example": "2025-08-28T10:00:00Z"},
          "uuid": {"type": "string", "example": "550e8400-e29b-41d4-a716-446655440000"},
          "reference_number": {"type": "string", "example": "REF-001"},
          "subject": {"type": "string", "example": "Order inquiry"}
        }
      },
      "MessageSearchResult": {
        "type": "object",
        "properties": {
          "created_at": {"type": "string", "format": "date-time", "example": "2025-08-28T10:00:00Z"},
          "text_content": {"type": "string", "example": "Hello, I need help with my order."},
          "conversation_created_at": {"type": "string", "format": "date-time", "example": "2025-08-28T10:00:00Z"},
          "conversation_uuid": {"type": "string", "example": "550e8400-e29b-41d4-a716-446655440000"},
          "conversation_reference_number": {"type": "string", "example": "REF-001"}
        }
      },
      "ContactSearchResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/ContactSearchResult"}
          }
        }
      },
      "ConversationSearchResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/ConversationSearchResult"}
          }
        }
      },
      "MessageSearchResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/MessageSearchResult"}
          }
        }
      },
      "ContactSearchResult": {
        "type": "object",
        "properties": {
          "created_at": {"type": "string", "format": "date-time", "example": "2025-08-28T10:00:00Z"},
          "first_name": {"type": "string", "example": "John"},
          "last_name": {"type": "string", "example": "Doe"},
          "email": {"type": "string", "format": "email", "example": "john.doe@example.com"}
        }
      },
      "Status": {
        "type": "object",
        "properties": {
          "id": {"type": "integer", "example": 1},
          "created_at": {"type": "string", "format": "date-time", "example": "2025-08-28T10:00:00Z"},
          "name": {"type": "string", "example": "Open"}
        }
      },
      "StatusResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {"$ref": "#/components/schemas/Status"}
        }
      },
      "StatusListResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/Status"}
          }
        }
      },
      "Priority": {
        "type": "object",
        "properties": {
          "id": {"type": "integer", "example": 1},
          "created_at": {"type": "string", "format": "date-time", "example": "2025-08-28T10:00:00Z"},
          "name": {"type": "string", "example": "High"}
        }
      },
      "PriorityResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {"$ref": "#/components/schemas/Priority"}
        }
      },
      "PriorityListResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/Priority"}
          }
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {"type": "integer", "example": 1},
          "created_at": {"type": "string", "format": "date-time", "example": "2025-08-28T10:00:00Z"},
          "updated_at": {"type": "string", "format": "date-time", "example": "2025-08-28T10:00:00Z"},
          "name": {"type": "string", "example": "bug"}
        }
      },
      "TagResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {"$ref": "#/components/schemas/Tag"}
        }
      },
      "TagListResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/Tag"}
          }
        }
      },
      "Agent": {
        "type": "object",
        "properties": {
          "id": {"type": "integer", "example": 1},
          "created_at": {"type": "string", "format": "date-time", "example": "2025-08-28T10:00:00Z"},
          "updated_at": {"type": "string", "format": "date-time", "example": "2025-08-28T10:00:00Z"},
          "first_name": {"type": "string", "example": "John"},
          "last_name": {"type": "string", "example": "Doe"},
          "email": {"type": "string", "format": "email", "example": "john.doe@example.com", "nullable": true},
          "type": {"type": "string", "example": "agent"},
          "availability_status": {"type": "string", "example": "online"},
          "phone_number_calling_code": {"type": "string", "nullable": true, "example": "+1"},
          "phone_number": {"type": "string", "nullable": true, "example": "1234567890"},
          "avatar_url": {"type": "string", "nullable": true, "example": "/avatars/agent1.jpg"},
          "enabled": {"type": "boolean", "example": true},
          "last_active_at": {"type": "string", "format": "date-time", "nullable": true, "example": "2025-08-28T10:00:00Z"},
          "last_login_at": {"type": "string", "format": "date-time", "nullable": true, "example": "2025-08-28T10:00:00Z"},
          "roles": {"type": "array", "items": {"type": "string"}, "example": ["admin"]},
          "permissions": {"type": "array", "items": {"type": "string"}, "example": ["conversations:read"]},
          "custom_attributes": {"type": "object"},
          "teams": {"type": "array", "items": {"$ref": "#/components/schemas/TeamCompact"}},
          "api_key": {"type": "string", "nullable": true},
          "api_key_last_used_at": {"type": "string", "format": "date-time", "nullable": true}
        }
      },
      "AgentCompact": {
        "type": "object",
        "properties": {
          "id": {"type": "integer", "example": 1},
          "type": {"type": "string", "example": "agent"},
          "first_name": {"type": "string", "example": "John"},
          "last_name": {"type": "string", "example": "Doe"},
          "email": {"type": "string", "format": "email", "nullable": true, "example": "john.doe@example.com"},
          "enabled": {"type": "boolean", "example": true},
          "avatar_url": {"type": "string", "nullable": true, "example": "/avatars/agent1.jpg"},
          "created_at": {"type": "string", "format": "date-time", "example": "2025-08-28T10:00:00Z"},
          "updated_at": {"type": "string", "format": "date-time", "example": "2025-08-28T10:00:00Z"},
          "total": {"type": "integer", "example": 100}
        }
      },
      "AgentResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {"$ref": "#/components/schemas/Agent"}
        }
      },
      "AgentListResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/Agent"}
          }
        }
      },
      "AgentCompactListResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/AgentCompact"}
          }
        }
      },
      "TeamCompact": {
        "type": "object",
        "properties": {
          "id": {"type": "integer", "example": 1},
          "name": {"type": "string", "example": "Support Team"},
          "emoji": {"type": "string", "nullable": true, "example": "🛠️"}
        }
      },
      "Team": {
        "type": "object",
        "properties": {
          "id": {"type": "integer", "example": 1},
          "created_at": {"type": "string", "format": "date-time", "example": "2025-08-28T10:00:00Z"},
          "updated_at": {"type": "string", "format": "date-time", "example": "2025-08-28T10:00:00Z"},
          "emoji": {"type": "string", "nullable": true, "example": "🛠️"},
          "name": {"type": "string", "example": "Support Team"},
          "conversation_assignment_type": {"type": "string", "example": "round_robin"},
          "timezone": {"type": "string", "example": "UTC"},
          "business_hours_id": {"type": "integer", "nullable": true, "example": 1},
          "sla_policy_id": {"type": "integer", "nullable": true, "example": 1},
          "max_auto_assigned_conversations": {"type": "integer", "example": 10}
        }
      },
      "TeamResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {"$ref": "#/components/schemas/Team"}
        }
      },
      "TeamListResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/Team"}
          }
        }
      },
      "Macro": {
        "type": "object",
        "properties": {
          "id": {"type": "integer", "example": 1},
          "created_at": {"type": "string", "format": "date-time", "example": "2025-08-28T10:00:00Z"},
          "updated_at": {"type": "string", "format": "date-time", "example": "2025-08-28T10:00:00Z"},
          "name": {"type": "string", "example": "Close and Thank"},
          "actions": {"type": "object", "description": "JSON object containing macro actions"},
          "visibility": {"type": "string", "example": "global"},
          "visible_when": {"type": "array", "items": {"type": "string"}, "example": ["conversation_open"]},
          "message_content": {"type": "string", "example": "Thank you for contacting us!"},
          "user_id": {"type": "string", "nullable": true, "example": "1"},
          "team_id": {"type": "string", "nullable": true, "example": "1"},
          "usage_count": {"type": "integer", "example": 25}
        }
      },
      "MacroResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {"$ref": "#/components/schemas/Macro"}
        }
      },
      "MacroListResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/Macro"}
          }
        }
      },
      "ContactNote": {
        "type": "object",
        "properties": {
          "id": {"type": "integer", "example": 1},
          "created_at": {"type": "string", "format": "date-time", "example": "2025-08-28T10:00:00Z"},
          "updated_at": {"type": "string", "format": "date-time", "example": "2025-08-28T10:00:00Z"},
          "contact_id": {"type": "integer", "example": 1},
          "note": {"type": "string", "example": "Customer prefers email communication"},
          "user_id": {"type": "integer", "example": 1},
          "first_name": {"type": "string", "example": "John"},
          "last_name": {"type": "string", "example": "Doe"},
          "avatar_url": {"type": "string", "nullable": true, "example": "/avatars/agent1.jpg"}
        }
      },
      "ContactNoteResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {"$ref": "#/components/schemas/ContactNote"}
        }
      },
      "ContactNoteListResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/ContactNote"}
          }
        }
      },
      "AutomationRule": {
        "type": "object",
        "properties": {
          "id": {"type": "integer", "example": 1},
          "created_at": {"type": "string", "format": "date-time", "example": "2025-08-28T10:00:00Z"},
          "updated_at": {"type": "string", "format": "date-time", "example": "2025-08-28T10:00:00Z"},
          "name": {"type": "string", "example": "Auto-assign urgent tickets"},
          "description": {"type": "string", "example": "Automatically assign high priority tickets to senior agents"},
          "type": {"type": "string", "example": "new_conversation"},
          "events": {"type": "array", "items": {"type": "string"}, "example": ["conversation.message.incoming"]},
          "enabled": {"type": "boolean", "example": true},
          "weight": {"type": "integer", "example": 100},
          "execution_mode": {"type": "string", "example": "all"},
          "rules": {"type": "object", "description": "JSON object containing rule conditions"}
        }
      },
      "AutomationRuleResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {"$ref": "#/components/schemas/AutomationRule"}
        }
      },
      "AutomationRuleListResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/AutomationRule"}
          }
        }
      },
      "Inbox": {
        "type": "object",
        "properties": {
          "id": {"type": "integer", "example": 1},
          "created_at": {"type": "string", "format": "date-time", "example": "2025-08-28T10:00:00Z"},
          "updated_at": {"type": "string", "format": "date-time", "example": "2025-08-28T10:00:00Z"},
          "name": {"type": "string", "example": "Support Email"},
          "channel": {"type": "string", "example": "email"},
          "enabled": {"type": "boolean", "example": true},
          "csat_enabled": {"type": "boolean", "example": true},
          "from": {"type": "string", "format": "email", "example": "support@company.com"},
          "config": {"type": "object", "description": "Channel configuration JSON"}
        }
      },
      "InboxResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {"$ref": "#/components/schemas/Inbox"}
        }
      },
      "InboxListResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/Inbox"}
          }
        }
      },
      "ActivityLog": {
        "type": "object",
        "properties": {
          "id": {"type": "integer", "example": 1},
          "created_at": {"type": "string", "format": "date-time", "example": "2025-08-28T10:00:00Z"},
          "updated_at": {"type": "string", "format": "date-time", "example": "2025-08-28T10:00:00Z"},
          "activity_type": {"type": "string", "example": "agent_login"},
          "activity_description": {"type": "string", "example": "Agent John Doe logged in"},
          "actor_id": {"type": "integer", "example": 1},
          "target_model_type": {"type": "string", "example": "user"},
          "target_model_id": {"type": "integer", "example": 1},
          "ip": {"type": "string", "example": "192.168.1.1"}
        }
      },
      "ActivityLogResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {"$ref": "#/components/schemas/ActivityLog"}
        }
      },
      "ActivityLogListResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/ActivityLog"}
          }
        }
      },
      "APIKeyResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {
            "type": "object",
            "properties": {
              "api_key": {"type": "string", "example": "ak_1234567890abcdef"},
              "api_secret": {"type": "string", "example": "as_abcdef1234567890"}
            }
          }
        }
      },
      "BusinessHour": {
        "type": "object",
        "properties": {
          "id": {"type": "integer", "example": 1},
          "created_at": {"type": "string", "format": "date-time", "example": "2025-08-28T10:00:00Z"},
          "updated_at": {"type": "string", "format": "date-time", "example": "2025-08-28T10:00:00Z"},
          "name": {"type": "string", "example": "Business Hours"},
          "timezone": {"type": "string", "example": "UTC"},
          "schedule": {"type": "object", "description": "Weekly schedule configuration"}
        }
      },
      "BusinessHourResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {"$ref": "#/components/schemas/BusinessHour"}
        }
      },
      "BusinessHourListResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/BusinessHour"}
          }
        }
      },
      "View": {
        "type": "object",
        "properties": {
          "id": {"type": "integer", "example": 1},
          "created_at": {"type": "string", "format": "date-time", "example": "2025-08-28T10:00:00Z"},
          "updated_at": {"type": "string", "format": "date-time", "example": "2025-08-28T10:00:00Z"},
          "name": {"type": "string", "example": "My Open Tickets"},
          "query": {"type": "object", "description": "View filter criteria"},
          "user_id": {"type": "integer", "example": 1}
        }
      },
      "ViewResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {"$ref": "#/components/schemas/View"}
        }
      },
      "ViewListResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/View"}
          }
        }
      },
      "Role": {
        "type": "object",
        "properties": {
          "id": {"type": "integer", "example": 1},
          "created_at": {"type": "string", "format": "date-time", "example": "2025-08-28T10:00:00Z"},
          "updated_at": {"type": "string", "format": "date-time", "example": "2025-08-28T10:00:00Z"},
          "name": {"type": "string", "example": "Administrator"},
          "permissions": {"type": "array", "items": {"type": "string"}, "example": ["conversations:read", "users:manage"]}
        }
      },
      "RoleResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {"$ref": "#/components/schemas/Role"}
        }
      },
      "RoleListResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/Role"}
          }
        }
      },
      "Webhook": {
        "type": "object",
        "properties": {
          "id": {"type": "integer", "example": 1},
          "created_at": {"type": "string", "format": "date-time", "example": "2025-08-28T10:00:00Z"},
          "updated_at": {"type": "string", "format": "date-time", "example": "2025-08-28T10:00:00Z"},
          "name": {"type": "string", "example": "Slack Notification"},
          "url": {"type": "string", "format": "uri", "example": "https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX"},
          "enabled": {"type": "boolean", "example": true},
          "events": {"type": "array", "items": {"type": "string"}, "example": ["conversation.created"]},
          "headers": {"type": "object", "description": "Custom HTTP headers"}
        }
      },
      "WebhookResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {"$ref": "#/components/schemas/Webhook"}
        }
      },
      "WebhookListResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/Webhook"}
          }
        }
      },
      "Template": {
        "type": "object",
        "properties": {
          "id": {"type": "integer", "example": 1},
          "created_at": {"type": "string", "format": "date-time", "example": "2025-08-28T10:00:00Z"},
          "updated_at": {"type": "string", "format": "date-time", "example": "2025-08-28T10:00:00Z"},
          "name": {"type": "string", "example": "Welcome Email"},
          "subject": {"type": "string", "example": "Welcome to our support"},
          "content": {"type": "string", "example": "Thank you for contacting us..."},
          "type": {"type": "string", "example": "email"}
        }
      },
      "TemplateResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {"$ref": "#/components/schemas/Template"}
        }
      },
      "TemplateListResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/Template"}
          }
        }
      },
      "SLA": {
        "type": "object",
        "properties": {
          "id": {"type": "integer", "example": 1},
          "created_at": {"type": "string", "format": "date-time", "example": "2025-08-28T10:00:00Z"},
          "updated_at": {"type": "string", "format": "date-time", "example": "2025-08-28T10:00:00Z"},
          "name": {"type": "string", "example": "Standard SLA"},
          "first_response_time": {"type": "integer", "example": 60, "description": "Minutes"},
          "resolution_time": {"type": "integer", "example": 1440, "description": "Minutes"}
        }
      },
      "SLAResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {"$ref": "#/components/schemas/SLA"}
        }
      },
      "SLAListResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/SLA"}
          }
        }
      },
      "CustomAttribute": {
        "type": "object",
        "properties": {
          "id": {"type": "integer", "example": 1},
          "created_at": {"type": "string", "format": "date-time", "example": "2025-08-28T10:00:00Z"},
          "updated_at": {"type": "string", "format": "date-time", "example": "2025-08-28T10:00:00Z"},
          "name": {"type": "string", "example": "Customer Type"},
          "key": {"type": "string", "example": "customer_type"},
          "type": {"type": "string", "example": "select"},
          "options": {"type": "array", "items": {"type": "string"}, "example": ["Premium", "Standard"]}
        }
      },
      "CustomAttributeResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {"$ref": "#/components/schemas/CustomAttribute"}
        }
      },
      "CustomAttributeListResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/CustomAttribute"}
          }
        }
      },
      "AICompletion": {
        "type": "object",
        "properties": {
          "content": {"type": "string", "example": "Thank you for contacting us. I'll help you resolve this issue..."},
          "usage": {"type": "object", "properties": {"tokens": {"type": "integer", "example": 150}}}
        }
      },
      "AICompletionResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {"$ref": "#/components/schemas/AICompletion"}
        }
      },
      "AIPrompt": {
        "type": "object",
        "properties": {
          "id": {"type": "string", "example": "reply_friendly"},
          "name": {"type": "string", "example": "Friendly Reply"},
          "prompt": {"type": "string", "example": "Write a friendly response to this customer inquiry"}
        }
      },
      "AIPromptListResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/AIPrompt"}
          }
        }
      },
      "Report": {
        "type": "object",
        "properties": {
          "period": {"type": "string", "example": "last_7_days"},
          "data": {"type": "object", "description": "Report data structure varies by report type"}
        }
      },
      "ReportResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "success"},
          "data": {"$ref": "#/components/schemas/Report"}
        }
      }
    }
  }
}